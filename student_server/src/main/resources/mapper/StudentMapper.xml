<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.auggie.student_server.mapper.StudentMapper">
    <!--c查询所有学生信息-->
    <select id="findAll" resultMap="studentInfoBase">
        SELECT sid, student_name, student_pwd, create_time
        FROM studentms.t_student
        where delete_status = 1
    </select>

    <resultMap id="studentInfoBase" type="Student">
        <id property="studentId" column="sid"/>
        <result property="studentName" column="student_name"/>
        <result property="studentPwd" column="student_pwd"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <!--根据查询学生信息-->
    <select id="findById" resultMap="studentInfoBase" parameterType="Student">
        SELECT sid, student_name, student_pwd
        FROM studentms.t_student
        WHERE sid = #{studentId}
          and delete_status = 1
    </select>

    <!--按条件查询学生-->
    <select id="findBySearch" resultMap="studentInfoBase" parameterType="Student">
        SELECT sid,student_name,student_pwd,create_time FROM studentms.t_student
        where delete_status = 1
        <if test="studentId != null ">
            and sid = #{studentId}
        </if>
        <if test="studentName != null">
            <if test="fuzzy == 0">
                AND student_name = #{studentName}
            </if>
            <if test="fuzzy == 1">
                AND student_name LIKE CONCAT('%', #{studentName}, '%')
            </if>
        </if>
    </select>

    <!--更新学生-->
    <update id="updateById" parameterType="Student">
        UPDATE studentms.t_student
        SET student_name = #{studentName},
            student_pwd  = #{studentPwd},
            update_time  =now()
        WHERE sid = #{studentId}
          and delete_status = 1
    </update>

    <!--保存学生-->
    <insert id="save" parameterType="Student">
        INSERT INTO studentms.t_student (student_name, student_pwd, create_time, update_time)
        VALUES (#{studentName}, #{studentPwd}, now(), now())
    </insert>

    <!--根据学生id删除学生-->
    <delete id="deleteById" parameterType="integer">
        update studentms.t_student
        set delete_status =0,
            update_time   =now()
        WHERE sid = #{studentId}
    </delete>
</mapper>